name: CD

on:
  push:
    branches:
      - main
      - staging

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-tag.outputs.image-tag }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Determine image tag
        id: set-tag
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          if [ "$BRANCH" = "main" ]; then
            echo "image-tag=latest" >> $GITHUB_OUTPUT
          else
            echo "image-tag=staging" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: vmanhhhh/portal-call-frontend:${{ steps.set-tag.outputs.image-tag }}
          build-args: |
            VITE_API_URL=${{ secrets.VITE_API_URL }}
            VITE_SIP_SERVER=${{ secrets.VITE_SIP_SERVER }}
            VITE_SIP_PORT=${{ secrets.VITE_SIP_PORT }}
            NODE_ENV=${{ steps.set-tag.outputs.image-tag == 'latest' && 'production' || 'staging' }}

  deploy:
    name: Deploy to EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy on EC2
        run: |
          IMAGE_TAG=${{ needs.build-and-push.outputs.image-tag }}
          if [ "$IMAGE_TAG" = "latest" ]; then
            PORT=80; ENV=prod; BASE_PATH="/portal-call"
          else
            PORT=8080; ENV=stg; BASE_PATH="/"
          fi
          ssh -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.HOST }} "set -e && \
            cd /var/www/portal-call && \
            cat > .env << 'EOL'
            VITE_API_URL=${{ secrets.VITE_API_URL }}
            VITE_SIP_SERVER=${{ secrets.VITE_SIP_SERVER }}
            VITE_SIP_PORT=${{ secrets.VITE_SIP_PORT }}
            NODE_ENV=${{ needs.build-and-push.outputs.image-tag == 'latest' && 'production' || 'staging' }}
            VITE_BASE_PATH=${BASE_PATH}
            TAG=${IMAGE_TAG}
            ENV=${ENV}
            PORT=${PORT}
            EOL
            docker-compose pull && \
            docker-compose down && \
            docker-compose up -d"
